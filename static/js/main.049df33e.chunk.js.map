{"version":3,"sources":["header.js","rate.js","headerrating.js","item.js","list.js","hoc.js","adder.js","addmovie.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handelchange","event","setState","keyword","target","value","searchmovie","findname","state","react_default","a","createElement","className","type","placeholder","onChange","onClick","Component","Rate","_ref","count","_ref$onChangeRating","onChangeRating","starsHtml","_loop","i","push","key","console","log","Rating","onchange","rate","newRating","MovieCard","currentmovie","rating","src","imgsrc","alt","name","year","LoaderHoc","WrappedComponent","_Component","isloading","inherits","createClass","_this2","setTimeout","isLoading","class","movielist","map","el","item","id","Addmovie","_ref$addmovie","addmovie","MovieAdder","hearname","e","newname","hearyear","newyear","hearimg","newimgsrc","hearID","newid","hearrating","newrating","thenewmovie","Math","random","toString","parseInt","newmovie","exit","movies","App","filtername","filter","moviess","toLowerCase","indexOf","movies1","showmovieadd","document","getElementById","style","height","hidemovieadd","addnewMovie","x","newone","concat","minrate","header","headerrating","list","adder","src_addmovie","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.049df33e.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n          }\r\n    }\r\n    handelchange = (event) => {\r\n        this.setState({keyword:event.target.value} )       \r\n    }\r\n    searchmovie = () => {\r\n        this.props.findname(this.state.keyword)         \r\n    }\r\n    render() { \r\n        return (\r\n            <div className='search-Bar'>\r\n            <input className='search' type='text' placeholder='search for a movie' onChange={this.handelchange}></input>\r\n            <button className='searchbutton' onClick={this.searchmovie}>Search</button>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Header ;\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst Rate = ({count,onChangeRating=()=>{}}) => {\r\n    let starsHtml = []\r\n    for(let i = 0; i < 5; i++) {\r\n        if(i < count) {\r\n            starsHtml.push(<span onClick={()=> onChangeRating(i+1)} key={i}>★</span>)\r\n        }\r\n        else {\r\n            starsHtml.push(<span onClick={()=> onChangeRating(i+1)} key={i}>☆</span>)\r\n        }\r\n    }\r\n    console.log('je suis le new count:',count)\r\n    return (\r\n        <div>{starsHtml}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Rate; ","import React, {Component} from 'react'\r\nimport Rate from './rate'\r\n\r\n\r\n\r\n\r\n\r\nconst Rating=({onchange,count})=>{\r\n    return (\r\n        <div className='ratingfilter'>\r\n            <span className='rating'>\r\n                <p className='minimumrating'>Minimum rating</p>\r\n                <p className='stars'><Rate count={count}\r\n                onChangeRating={(newRating) =>{\r\n                onchange(newRating)\r\n            }}/></p>\r\n            </span>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Rating; ","import React from 'react'\r\nimport Rate from './rate'\r\n\r\nconst MovieCard=({currentmovie})=> {\r\n    return (\r\n        <div className='movie-card-container'>\r\n            <div className='movieRating1'>\r\n                <p className='stars1'><Rate count={currentmovie.rating}/></p>\r\n            </div>\r\n            <img src={currentmovie.imgsrc} alt='img' className='imgstyle'/>\r\n            <div className='moviedescription'>\r\n                <span>{currentmovie.name}</span>\r\n                <span>-</span>\r\n                <span>{currentmovie.year}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard; ","import React, {Component} from 'react'\r\nimport MovieCard from './item'\r\nimport LoaderHoc from './hoc'\r\nclass MovieList extends Component {    \r\n      render() {\r\n        return(\r\n            this.props.movielist.map((el)=><MovieCard key={el.id} currentmovie={el}/>)           \r\n        )\r\n      }\r\n}\r\n \r\nexport default LoaderHoc(MovieList);","import React , {Component} from 'react'\r\n\r\nconst LoaderHoc = (WrappedComponent)=>{\r\n    return class LoaderHoc extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n              isloading: true,\r\n            }\r\n          }\r\n        \r\n          isLoading(){\r\n            setTimeout(() => {\r\n              this.setState({\r\n                isloading: false\r\n              })\r\n            }, 2000)\r\n          }\r\n        \r\n        componentDidMount(){\r\n            this.isLoading();\r\n        }\r\n        render() { \r\n        return (\r\n            this.state.isloading === false ? <WrappedComponent {...this.props}></WrappedComponent> : <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>)\r\n        }\r\n    }}\r\nexport default LoaderHoc; \r\n    ","import React from 'react'\r\n\r\n\r\n\r\n\r\n\r\nconst Addmovie = ({addmovie=()=>{}}) => {\r\n    return (\r\n        <div className='movie-add-container'>\r\n            <p className='add' onClick={addmovie}>+</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Addmovie;    ","import React , {Component} from 'react'\r\n\r\nclass MovieAdder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {       \r\n            newid:'',\r\n            newname:'', \r\n            newyear:'', \r\n            newrating:'', \r\n            newimgsrc:''\r\n            \r\n          }\r\n          \r\n    }\r\n    hearname=(e)=>{\r\n         this.setState({newname: e.target.value});\r\n    }\r\n    hearyear=(e)=>{\r\n        this.setState({newyear: e.target.value});\r\n        \r\n    }\r\n    hearimg=(e)=>{\r\n        this.setState({newimgsrc: e.target.value});\r\n        \r\n    }\r\n    hearID=(e)=>{\r\n        this.setState({newid: e.target.value});\r\n        \r\n    }\r\n    hearrating=(e)=>{\r\n        this.setState({newrating: e.target.value});\r\n        \r\n    }\r\n    addmovie=()=>{\r\n        let thenewmovie = {\r\n            id:Math.random().toString(),\r\n            name:this.state.newname,\r\n            year: this.state.newyear, \r\n            rating:parseInt(this.state.newrating,10),\r\n            imgsrc:this.state.newimgsrc \r\n        }\r\n    \r\n        this.props.newmovie(thenewmovie);\r\n    }        \r\n    render() { \r\n        return (\r\n            <div  id='movieAdder'>\r\n                <i className=\"fa fa-window-close closeBTN\" onClick={this.props.exit}></i>\r\n                <p className='firstparag'>Movie Name:</p>\r\n                <input className='search1' type='text' name='name' placeholder='search for a movie' onChange={this.hearname}></input>\r\n                <p>Movie Year:</p>\r\n                <input className='search1' type='text' name='year'placeholder='Movie Year' onChange={this.hearyear}></input>\r\n                <p>Movie Immage:</p>\r\n                <input className='search1' type='text'name='img' placeholder='Movie Image' onChange={this.hearimg}></input>\r\n                <p>Movie ID:</p>\r\n                <input className='search1' type='text'name='id' placeholder='Movie ID' onChange={this.hearID}></input>\r\n                <p>Rating:</p>\r\n                <input className='search1' type='number' name='rating' placeholder='rating from 0 to 5' onChange={this.hearrating}></input>\r\n                <br/>\r\n                <button className='addbutton' onClick={this.addmovie}>Add movie</button>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default MovieAdder;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './header'\nimport Rating from './headerrating'\nimport MovieList from './list.js'\nimport Addmovie from './adder'\nimport MovieAdder from './addmovie'\nconst movies=[\n  {\n    id:'x',\n    name:'inception', \n    year:'2010', \n    rating:2, \n    imgsrc:'https://images-na.ssl-images-amazon.com/images/I/51TfUWh5N9L._SY445_.jpg'\n  },\n  { \n    id:'y',\n    name:'troy', \n    year:'2006', \n    rating:5, \n    imgsrc:'https://assets.www.warnerbros.com/sites/default/files/troy_posterlarge_0-52126870.jpg'\n  },\n  {\n    id:'z',\n    name:'lord of the rings', \n    year:'2000', \n    rating:4, \n    imgsrc:'https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_.jpg'\n  }, \n]\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      moviess : movies,\n      movies1: movies,\n      minrate:1, \n      key:'' \n    }\n  }\n  filtername=(keyword)=>{\n    let filter=this.state.moviess.filter((el)=>el.name.toLowerCase().indexOf(keyword)!==-1 ||el.year.toLowerCase().indexOf(keyword)!==-1)\n    this.setState({movies1:filter, key: keyword})\n    console.log('tab',filter)\n  }\n  showmovieadd=()=>{\n    console.log('clicked')\n    document.getElementById('movieAdder').style.height='439px'\n  }\n  hidemovieadd=()=>{\n    console.log('clicked')\n    document.getElementById('movieAdder').style.height='0px'\n  }\n  addnewMovie=(x)=>{\n    let newone=this.state.movies1.concat(x)\n    this.setState({movies1:newone,\n                    moviess:newone})\n    console.log(newone)\n  }\n\n  render() { \n    return ( \n      <div className=\"app\">\n        <Header findname={(x)=>this.filtername(x)}/>\n        <Rating onchange={(newRating) => {this.setState({minrate:newRating})}} count={this.state.minrate}/>\n        <div className='movie-list'>\n          <MovieList movielist={this.state.movies1.filter(el=>el.rating>=this.state.minrate)} />\n          <Addmovie addmovie={()=>this.showmovieadd()}/>\n        </div>\n        <MovieAdder exit={()=>this.hidemovieadd()} newmovie={(x)=>this.addnewMovie(x)}/>\n    </div>\n     );\n  }\n}\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}